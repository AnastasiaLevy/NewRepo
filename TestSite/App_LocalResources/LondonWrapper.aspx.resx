<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="about_more.Text" xml:space="preserve">
    <value>Read More About:</value>
  </data>
  <data name="about_paragraph.Text" xml:space="preserve">
    <value>The Tower of London test is a well-known test used in applied clinical neuropsychology 
                    for the assessment of executive functioning specifically to detect deficits in planning, 
                    which may occur due to a variety of medical and neuropsychiatric conditions. 
                    It is related to the classic problem-solving puzzle known as the Tower of Hanoi.</value>
  </data>
  <data name="about_title.Text" xml:space="preserve">
    <value>Tower of London</value>
  </data>
  <data name="container_title.Text" xml:space="preserve">
    <value>Select Version:</value>
  </data>
  <data name="follow.Text" xml:space="preserve">
    <value>Follow Us</value>
  </data>
  <data name="login.Text" xml:space="preserve">
    <value>Please Login</value>
  </data>
  <data name="navbar_about.Text" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="navbar_home.Text" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="navbar_logIn.Text" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="navbar_logOut.Text" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="navbar_profile.Text" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="or.Text" xml:space="preserve">
    <value>OR</value>
  </data>
  <data name="pagetitle.title" xml:space="preserve">
    <value>Tower Of London Test Online – CogQuiz</value>
  </data>
  <data name="popup_item1_description" xml:space="preserve">
    <value>Make your own Tower of London Test Problems. You control the number of demo, practice, and scored trials, the number of direct and indirect moves, the total number of moves, the maximum moves per trial, and the time allowed to complete a trial. The figure on the far left shows an in progress construction of a trial. The next two figures show how the text and parameters associated with a test are constructed.</value>
  </data>
  <data name="popup_item1_imgTitle" xml:space="preserve">
    <value>'Add or Edit trials. ', 'Set up instructions or test descriptions in any language. ', 'Set up the number of demo trials, actual trials', 'Set up Feddback test, Wait message, End-of-the-test instructions. ', 'jquery elastic grid 9'</value>
  </data>
  <data name="popup_item1_title" xml:space="preserve">
    <value>Make Your Own Tests</value>
  </data>
  <data name="popup_item2_description" xml:space="preserve">
    <value>Get immediate test results. Figure 1 on the left shows a typical results output for a set of Tower of London Problems.  The column information is the following: column 1 is the trial number, column 2 designates the trial as scored (Trial) or as a Practice trial (setup allows the inclusion or non-inclusion of Practice trials in the scoring); Column labeled Initial Think Time is the time prior to the first move in seconds and milliseconds (It is your initial planning time.); the Game Time column is the total trial time and includes the Initial think time; Number of Moves column is the total number of moves made on a trial (an upper limit can be designated in the setup); the column label Minimum Moves is the number of moves for an optimal solution; the Excess Moves column gives the number of moves above an optimal solution—if the move or time limit is exceeded the score is the move limit minus the optimal solution number of moves;  the Number of Illegal moves is the number of initial attempts to drop a bead on a peg where it would result in stacking above the peg; the Game Timed Out column is checked when the time limit is exceeded; the Over Moves Limit is checked when the number of moves exceeds the upper move limit. The second figure shows a direct transfer to Excel. The third figure shows the trials transferred to Excel as a single line. The third figure will probably be most useful for those individuals who want to analyze their data in SPSS.</value>
  </data>
  <data name="popup_item2_imgTitle" xml:space="preserve">
    <value>'jquery elastic grid', 'jquery elastic grid', 'jquery elastic grid', 'jquery elastic grid', 'jquery elastic grid'</value>
  </data>
  <data name="popup_item2_title" xml:space="preserve">
    <value>Scoring</value>
  </data>
  <data name="popup_item3_description" xml:space="preserve">
    <value>Figures 1 and 2 show a problem in the process of being solved. Figure 3 shows a window where you can click on Start on the left hand side to initiate a Tower of London set of problems. The right half of this window shows tests that have been completed. Clicking on the eye allows you to see the results. Figure 4 shows a window where you can either run a test if you have tests or purchase tests if there is not a green button</value>
  </data>
  <data name="popup_item3_imgTitle" xml:space="preserve">
    <value>'jquery elastic grid', 'jquery elastic grid', 'jquery elastic grid', 'jquery elastic grid', 'jquery elastic grid'</value>
  </data>
  <data name="popup_item3_title" xml:space="preserve">
    <value>Tower of London Test</value>
  </data>
  <data name="price_hundred_buy.Text" xml:space="preserve">
    <value>Buy Now</value>
  </data>
  <data name="price_hundred_paragraph.Text" xml:space="preserve">
    <value>Medium Size Project</value>
  </data>
  <data name="price_hundred_title.Text" xml:space="preserve">
    <value>Set of 100</value>
  </data>
  <data name="price_single_buy.Text" xml:space="preserve">
    <value>Buy Now</value>
  </data>
  <data name="price_single_paragraph.Text" xml:space="preserve">
    <value>One Time Run</value>
  </data>
  <data name="price_single_title.Text" xml:space="preserve">
    <value>Single Test</value>
  </data>
  <data name="price_ten_buy.Text" xml:space="preserve">
    <value>Buy Now</value>
  </data>
  <data name="price_ten_paragraph.Text" xml:space="preserve">
    <value>Small Project</value>
  </data>
  <data name="price_ten_title.Text" xml:space="preserve">
    <value>Set of 10</value>
  </data>
  <data name="price_unlim_buy.Text" xml:space="preserve">
    <value>Buy Now</value>
  </data>
  <data name="price_unlim_paragraph.Text" xml:space="preserve">
    <value>Large Project</value>
  </data>
  <data name="price_unlim_title.Text" xml:space="preserve">
    <value>500</value>
  </data>
  <data name="register.Text" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="runtest.Text" xml:space="preserve">
    <value>Run Test</value>
  </data>
  <data name="specifications_paragraph1.Text" xml:space="preserve">
    <value>This test will take about 20 minutes to complete.</value>
  </data>
  <data name="specifications_paragraph2.Text" xml:space="preserve">
    <value>Recommended minimum screen resolution is 1000 x 700.</value>
  </data>
  <data name="specifications_title.Text" xml:space="preserve">
    <value>Specifications:</value>
  </data>
</root>