<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnManual.Text" xml:space="preserve">
    <value>View User Manual</value>
  </data>
  <data name="downloadBtn.Text" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="examplesTitle.Text" xml:space="preserve">
    <value>View Examples</value>
  </data>
  <data name="img1DescrSpan1.Text" xml:space="preserve">
    <value>Create questionnaire in any language</value>
  </data>
  <data name="img1DescrSpan2.Text" xml:space="preserve">
    <value>Select from 8 types of questions</value>
  </data>
  <data name="img1DescrSpan3.Text" xml:space="preserve">
    <value>Update your header color</value>
  </data>
  <data name="img1DescrSpan4.Text" xml:space="preserve">
    <value>Set fonts</value>
  </data>
  <data name="img1DescrSpan5.Text" xml:space="preserve">
    <value>Email as an attachment to anybody in the world</value>
  </data>
  <data name="img1Title.Text" xml:space="preserve">
    <value>Make your own questionnaire. As many as you would like</value>
  </data>
  <data name="img2DescrSpan1.Text" xml:space="preserve">
    <value>Create scale of any size</value>
  </data>
  <data name="img2DescrSpan2.Text" xml:space="preserve">
    <value>Set description text</value>
  </data>
  <data name="img2DescrSpan3.Text" xml:space="preserve">
    <value>Set font size</value>
  </data>
  <data name="img2DescrSpan4.Text" xml:space="preserve">
    <value>Support multilane description</value>
  </data>
  <data name="img2Title.Text" xml:space="preserve">
    <value>2. Likert scale question</value>
  </data>
  <data name="img3DescrSpan1.Text" xml:space="preserve">
    <value>Use Date Format Question for birthdates or events</value>
  </data>
  <data name="img3DescrSpan2.Text" xml:space="preserve">
    <value>Make Combo Box question for multiple choice single option answer</value>
  </data>
  <data name="img3DescrSpan3.Text" xml:space="preserve">
    <value>Works with words or numbers</value>
  </data>
  <data name="img3DescrSpan4.Text" xml:space="preserve">
    <value>Set up the fonts size</value>
  </data>
  <data name="img3Title.Text" xml:space="preserve">
    <value>3. Date and Combo Box question</value>
  </data>
  <data name="img4DescrSpan1.Text" xml:space="preserve">
    <value>Select between Radiobutton and CheckBox type question</value>
  </data>
  <data name="img4DescrSpan2.Text" xml:space="preserve">
    <value>Set text font</value>
  </data>
  <data name="img4DescrSpan3.Text" xml:space="preserve">
    <value>Set answers direction</value>
  </data>
  <data name="img4Title.Text" xml:space="preserve">
    <value>4. Radiobutton and CheckBox</value>
  </data>
  <data name="img5DescrSpan1.Text" xml:space="preserve">
    <value>Enter the text for participant to read</value>
  </data>
  <data name="img5DescrSpan2.Text" xml:space="preserve">
    <value>The text will be hidden after its read</value>
  </data>
  <data name="img5DescrSpan3.Text" xml:space="preserve">
    <value>Set up any number of any type questions for the participant to answer</value>
  </data>
  <data name="img5Title.Text" xml:space="preserve">
    <value>5. Vignette Question</value>
  </data>
  <data name="img6DescrSpan1.Text" xml:space="preserve">
    <value>Import images as part of the question</value>
  </data>
  <data name="img6DescrSpan2.Text" xml:space="preserve">
    <value>Import one large image or multiple small ones</value>
  </data>
  <data name="img6DescrSpan3.Text" xml:space="preserve">
    <value>3 sizes available</value>
  </data>
  <data name="img6DescrSpan4.Text" xml:space="preserve">
    <value>Align vertically or horisontally</value>
  </data>
  <data name="img6Title.Text" xml:space="preserve">
    <value>6. Image Question</value>
  </data>
  <data name="img7DescrSpan1.Text" xml:space="preserve">
    <value>You have ability to save filled out questionnaire using question text or Variable name for easy import to any Database</value>
  </data>
  <data name="img7DescrSpan2.Text" xml:space="preserve">
    <value>Save as a simple text file to store as a hard copy</value>
  </data>
  <data name="img7DescrSpan3.Text" xml:space="preserve">
    <value>The data is not stored on the device to ensure patient's privacy</value>
  </data>
  <data name="img7Title.Text" xml:space="preserve">
    <value>7. Save either by question name or variable name</value>
  </data>
  <data name="img8DescrSpan1.Text" xml:space="preserve">
    <value>You have the ability to enter the correct answer and score the test right after</value>
  </data>
  <data name="img8DescrSpan2.Text" xml:space="preserve">
    <value>Import one large image or multiple small ones</value>
  </data>
  <data name="img8DescrSpan3.Text" xml:space="preserve">
    <value>Print out scored results</value>
  </data>
  <data name="img8Title.Text" xml:space="preserve">
    <value>8. Score the test</value>
  </data>
  <data name="img9DescrSpan1.Text" xml:space="preserve">
    <value>You have ability to export test to html file</value>
  </data>
  <data name="img9DescrSpan2.Text" xml:space="preserve">
    <value>Send this file to friends or take it home</value>
  </data>
  <data name="img9DescrSpan3.Text" xml:space="preserve">
    <value>Add generated test to your site</value>
  </data>
  <data name="img9DescrSpan4.Text" xml:space="preserve">
    <value>Pass it and print results to excell file</value>
  </data>
  <data name="img9Title.Text" xml:space="preserve">
    <value>9. Export to HTML</value>
  </data>
  <data name="key.Text" xml:space="preserve">
    <value>Registration Key</value>
  </data>
  <data name="mainDescription.Text" xml:space="preserve">
    <value>&lt;p&gt;CogQuest Quesionnaire desktop tool allows to create a series of questions to gather any needed inforamtion from/about participants. It has 7 types of questions, including Date and Dropdown. CogQuest allows storing data in text file for printing or Excel Document for easy export to SPSS.&lt;/p&gt;

&lt;p&gt;You can create multiple choice questions, Likert scale questions, long open-ended questions, short answer questions, etc. This is ideal for research labs. You can email a demographic questionnaire to a scheduled participant and have it emailed back and thereby avoid loss of valuable laboratory testing time. A patient/client can fill out a questionnaire in the waiting room or mail it in prior to an appointment.&lt;/p&gt;</value>
  </data>
  <data name="mainTitle.Text" xml:space="preserve">
    <value>CogQuest Simple Questionnaire</value>
  </data>
  <data name="navbar_about.Text" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="navbar_home.Text" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="navbar_logIn.Text" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="navbar_logOut.Text" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="navbar_profile.Text" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="pageTitle.Title" xml:space="preserve">
    <value>Psychological Questionnaire, Cognitive Test Online Practice, Cognitive Ability Test Online</value>
  </data>
</root>